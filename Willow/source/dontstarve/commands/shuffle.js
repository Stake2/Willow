const { databaseUsersValidateArtifact } = require("../../database/users");
const { addServerMessage } = require("../../scripts/serverlist");
const { rollDice } = require("../../utils/extras");

module.exports = async (body, res, server) => {
    const hasArtifact = await databaseUsersValidateArtifact(body.value, "shuffle_skin");
    if (!hasArtifact) return addServerMessage({ key: "message", value: { userid: body.value.userid, message: `Você não possui esse artefato!`, name: "Willow", type: "willow" } }, server.identity);
    const prefabs = ["wortox_build", "wilson", "willow", "wendy", "waxwell", "wolfgang", "winona", "warly", "wes", "wanda", "wx78", "wathgrithr", "wonkey", "webber", "walter", "woodie", "wickerbottom"];
    const string = `player.AnimState:OverrideSymbol("face", "${prefabs[rollDice(0, prefabs.length - 1)]}", "face") player.AnimState:OverrideSymbol("headbase", "${prefabs[rollDice(0, prefabs.length - 1)]}", "headbase") player.AnimState:OverrideSymbol("hair", "${prefabs[rollDice(0, prefabs.length - 1)]}", "hair") player.AnimState:OverrideSymbol("hairpigtails", "${prefabs[rollDice(0, prefabs.length - 1)]}", "hair") player.AnimState:OverrideSymbol("hair_hat", "${prefabs[rollDice(0, prefabs.length - 1)]}", "hair_hat") player.AnimState:OverrideSymbol("beard", "${prefabs[rollDice(0, prefabs.length - 1)]}", "beard") player.AnimState:OverrideSymbol("torso", "${prefabs[rollDice(0, prefabs.length - 1)]}", "torso") player.AnimState:OverrideSymbol("torso_pelvis", "${prefabs[rollDice(0, prefabs.length - 1)]}", "torso_pelvis") player.AnimState:OverrideSymbol("arm_upper", "${prefabs[rollDice(0, prefabs.length - 1)]}", "arm_upper") player.AnimState:OverrideSymbol("arm_lower", "${prefabs[rollDice(0, prefabs.length - 1)]}", "arm_lower") player.AnimState:OverrideSymbol("hand", "${prefabs[rollDice(0, prefabs.length - 1)]}", "hand") player.AnimState:OverrideSymbol("leg", "${prefabs[rollDice(0, prefabs.length - 1)]}", "leg") player.AnimState:OverrideSymbol("foot", "${prefabs[rollDice(0, prefabs.length - 1)]}", "foot") player.AnimState:OverrideSymbol("swap_hat", "${prefabs[rollDice(0, prefabs.length - 1)]}", "swap_hat") player.AnimState:OverrideSymbol("swap_body", "${prefabs[rollDice(0, prefabs.length - 1)]}", "swap_body") player.AnimState:OverrideSymbol("swap_object", "${prefabs[rollDice(0, prefabs.length - 1)]}", "swap_object") player.AnimState:OverrideSymbol("swap_back", "${prefabs[rollDice(0, prefabs.length - 1)]}", "swap_back") player.AnimState:OverrideSymbol("ghostface", "${prefabs[rollDice(0, prefabs.length - 1)]}", "ghostface") player.AnimState:OverrideSymbol("ghosthair", "${prefabs[rollDice(0, prefabs.length - 1)]}", "ghosthair") player.AnimState:OverrideSymbol("ghosthead", "${prefabs[rollDice(0, prefabs.length - 1)]}", "ghosthead") player.AnimState:OverrideSymbol("ghosttorso", "${prefabs[rollDice(0, prefabs.length - 1)]}", "ghosttorso") player.AnimState:OverrideSymbol("ghostarm", "${prefabs[rollDice(0, prefabs.length - 1)]}", "ghostarm") player.AnimState:OverrideSymbol("ghosthand", "${prefabs[rollDice(0, prefabs.length - 1)]}", "ghosthand") player.AnimState:OverrideSymbol("ghostfoot", "${prefabs[rollDice(0, prefabs.length - 1)]}", "ghostfoot")`;
    addServerMessage({ key: "terminal", value: { message: `local player = nil for _, p in ipairs(AllPlayers) do if p.userid == "${body.value.userid}" then player = p break end end if player then c_select(player) ${string} end` } }, server.identity);
    addServerMessage({ key: "playercontroller", value: { userid: body.value.userid, message: `Boom!`, animation: "strum", soundeffect: "wes/characters/wes/balloon_party" } }, server.identity);
}